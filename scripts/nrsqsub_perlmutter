#!/bin/bash
set -e

: ${QUEUE:="regular"} # https://docs.nersc.gov/jobs/policy/#perlmutter-gpu

source $NEKRS_HOME/bin/nrsqsub_utils
setup $# 1

gpu_per_node=4
cores_per_socket=16
let nn=$nodes*$gpu_per_node
let ntasks=nn
backend=CUDA

chk_case $ntasks

striping_unit=16777216
max_striping_factor=128
set +e; let striping_factor=$nodes/2; set -e
if [ $striping_factor -gt $max_striping_factor ]; then
  striping_factor=$max_striping_factor
fi
if [ $striping_factor -lt 1 ]; then
  striping_factor=1
fi

MPICH_MPIIO_HINTS="*:striping_unit=${striping_unit}:striping_factor=${striping_factor}:romio_cb_write=enable:romio_ds_write=disable:romio_no_indep_rw=true"

# sbatch
SFILE=s.bin
echo "#!/bin/bash" > $SFILE
echo "#SBATCH -A $PROJ_ID" >>$SFILE
echo "#SBATCH -J $jobname" >>$SFILE
echo "#SBATCH -o %x-%j.out" >>$SFILE
echo "#SBATCH -t ${time}:00" >>$SFILE
echo "#SBATCH -N $qnodes" >>$SFILE
echo "#SBATCH -q $QUEUE" >>$SFILE
echo "#SBATCH -C gpu" >>$SFILE
echo "#SBATCH --exclusive" >>$SFILE
echo "#SBATCH --ntasks-per-node=$gpu_per_node" >>$SFILE
echo "#SBATCH --cpus-per-task=$cores_per_socket" >>$SFILE
echo "#SBATCH --gpu-bind=none" >> $SFILE
echo "#SBATCH --gpus-per-node=4" >> $SFILE

echo "module load PrgEnv-gnu" >>$SFILE
echo "module load cudatoolkit" >>$SFILE
echo "module load cpe-cuda" >>$SFILE
echo "module load cmake" >>$SFILE
echo "module unload cray-libsci" >>$SFILE
echo "module list" >>$SFILE
echo "nvidia-smi" >>$SFILE

echo "export SLURM_CPU_BIND=\"cores\"" >> $SFILE
echo "export CRAY_ACCEL_TARGET=nvidia80" >>$SFILE
echo "export MPICH_GPU_SUPPORT_ENABLED=1" >>$SFILE
echo "export MPICH_OFI_NIC_POLICY=NUMA" >>$SFILE

echo "ulimit -s unlimited " >>$SFILE
echo "export NEKRS_HOME=$NEKRS_HOME" >>$SFILE
echo "export NEKRS_GPU_MPI=1 " >>$SFILE

echo "export MPICH_MPIIO_HINTS=$MPICH_MPIIO_HINTS" >>$SFILE
echo "export MPICH_MPIIO_STATS=1" >>$SFILE

echo "export FI_CXI_RX_MATCH_MODE=hybrid" >> $SFILE  

echo "if [ \$NEKRS_CACHE_BCAST -eq 1 ]; then" >> $SFILE
echo "  export NEKRS_LOCAL_TMP_DIR=\$TMPDIR/nrs" >> $SFILE
echo "  mkdir \$NEKRS_LOCAL_TMP_DIR" >> $SFILE
echo "fi" >> $SFILE

if [ $RUN_ONLY -eq 0 ]; then
  echo -e "\n# precompilation" >>$SFILE
  CMD_build="srun -N 1 $bin --backend $backend --device-id 0 --setup \$case_tmp $extra_args --build-only \$ntasks_tmp"
  add_build_CMD "$SFILE" "$CMD_build" "$ntasks"
fi

if [ $BUILD_ONLY -eq 0 ]; then
  echo -e "\n# actual run" >>$SFILE
  echo "srun $bin --backend $backend --setup $case $extra_args" >>$SFILE
fi
sbatch $SFILE

# clean-up
rm -rf $SFILE $ROMIO_HINTS

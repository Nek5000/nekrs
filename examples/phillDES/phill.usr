C
C  USER SPECIFIED ROUTINES: 
C
C     - boundary conditions 
C     - initial conditions  
C     - variable properties 
C     - forcing function for fluid (f)
C     - forcing function for passive scalar (q)
C     - general purpose routine for checking errors etc.        
C
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux   = 1.0  
      uy   = 0.0 
      uz   = 0.0

      if (ifield.eq.2) then
         temp = 1.0
      elseif (ifield.eq.3) then
         temp = 0.01
      elseif (ifield.eq.4) then
         temp = 0.1
      endif
      
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'
      
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat   ! This routine to modify element vertices
      include 'SIZE'      ! _before_ mesh is generated, which 
      include 'TOTAL'     ! guarantees GLL mapping of mesh.

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2()  ! This routine to modify mesh coordinates
      include 'SIZE'
      include 'TOTAL'

      do iel=1,nelt
      do ifc=1,2*ndim
         cbc(ifc,iel,2)  = cbc(ifc,iel,1)
         cbc(ifc,iel,3)  = cbc(ifc,iel,1)
         cbc(ifc,iel,4)  = cbc(ifc,iel,1)
         if (cbc(ifc,iel,1) .eq. 'W  ')then
           cbc(ifc,iel,2) = 't  ' 
           cbc(ifc,iel,3) = 't  ' 
           cbc(ifc,iel,4) = 't  ' 
         endif
         if (cbc(ifc,iel,1) .eq. 'W  ') boundaryID(ifc,iel) = 1
         if (cbc(ifc,iel,2) .eq. 't  ') boundaryIDt(ifc,iel) = 1
      enddo
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      include 'SIZE'
      include 'TOTAL'
            
      common /walldist/ ywd(lx1,ly1,lz1,lelt)
      real ywd

      real w1,w2,w3,w4,w5
      common /SCRNS/
     &     w1(lx1*ly1*lz1*lelv)
     &     ,w2(lx1*ly1*lz1*lelv)
     &     ,w3(lx1*ly1*lz1*lelv)
     &     ,w4(lx1*ly1*lz1*lelv)
     &     ,w5(lx1*ly1*lz1*lelv)

      common /NRSSCPTR/ nrs_scptr(1)
      integer*8 nrs_scptr

      nxyz = lx1*ly1*lz1
      ntot = nxyz*nelt

      call cheap_dist(ywd,1,'W  ')
      !call distf(ywd,1,'W  ',w1,w2,w3,w4,w5)
      nrs_scptr(1) = loc(ywd(1,1,1,1))

      return
      end
c-----------------------------------------------------------------------
